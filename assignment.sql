DROP DATABASE IF EXISTS DBMS;
CREATE DATABASE DBMS;
USE DBMS

CREATE TABLE STOCK
(
ITEM_ID VARCHAR(10),
IN_STOCK INT DEFAULT 0,
IN_DEMAND_RATING INT DEFAULT 0,
T_CAPACITY INT,
PRIMARY KEY (ITEM_ID)
);

CREATE TABLE ADDRESS
(
USER_ID VARCHAR(10),
ADD_INFO VARCHAR(25),
CITY VARCHAR(20),
PINCODE INT ,
AID VARCHAR(20),
PRIMARY KEY (AID)
);

CREATE TABLE CUSTOMER_ID
(
USER_ID VARCHAR(10),
USER_NAME VARCHAR(10),
AID VARCHAR(20),
PASSWORD VARCHAR(20),
PRIMARY KEY (USER_ID),
FOREIGN KEY (AID) REFERENCES ADDRESS(AID) ON DELETE SET NULL
);

CREATE TABLE PAYMENT_METHOD
(
PID VARCHAR(10),
AMT INT,
PAYMENT_TYPE VARCHAR(20),
CHECK (AMT>99),
PRIMARY KEY (PID)
);

CREATE TABLE ORDERS
(
ORDER_ID VARCHAR(10),
ORDER_DATE DATE,
DELIVERY_DATE DATE,
ADD_INFO VARCHAR(20),
PHONE_NO VARCHAR(10),
PID VARCHAR(10),
ITEM_ID VARCHAR(10),
USER_ID VARCHAR(10),
AID VARCHAR(20),
PRIMARY KEY (ORDER_ID),
FOREIGN KEY (PID) REFERENCES PAYMENT_METHOD(PID) ON DELETE SET NULL,
FOREIGN KEY (ITEM_ID) REFERENCES STOCK(ITEM_ID) ON DELETE SET NULL,
FOREIGN KEY (AID) REFERENCES ADDRESS(AID) ON DELETE SET NULL
);

INSERT INTO STOCK VALUES( 'I1','50',1,'81' );
INSERT INTO STOCK VALUES( 'I2','60',2,'82' );
INSERT INTO STOCK VALUES( 'I3','100',3,'786' );
INSERT INTO STOCK VALUES( 'I4','28',4,'69' );
INSERT INTO STOCK VALUES( 'I5','256',5,'420' );

INSERT INTO ADDRESS VALUES( '1JS038','WHITEFIELD','BANGLORE',560098,'A1' );
INSERT INTO ADDRESS VALUES( '1JS024','R R NAGAR','BANGLORE',560089,'A2' );
INSERT INTO ADDRESS VALUES( '1JS026','KANKARBAGH','PATNA',800020,'A3' );
INSERT INTO ADDRESS VALUES( '1JS030','BORING ROAD','PATNA',800015,'A4' );
INSERT INTO ADDRESS VALUES( '1JS041','VIJAY NAGAR','INDORE',420069,'A5' );

INSERT INTO CUSTOMER_ID VALUES( '1JS038' ,'ASHUTOSH' ,'A1' ,'P1' );
INSERT INTO CUSTOMER_ID VALUES( '1JS024' ,'AMITESH' ,'A2' ,'P2' );
INSERT INTO CUSTOMER_ID VALUES( '1JS026' ,'AMRIT_CR' ,'A3' ,'P3' );
INSERT INTO CUSTOMER_ID VALUES( '1JS030' ,'ANIKET' ,'A4' ,'P4' );
INSERT INTO CUSTOMER_ID VALUES( '1JS041' ,'BADAL' ,'A5' ,'P5' );

INSERT INTO PAYMENT_METHOD VALUES( 'PD1',10000 ,'CASH' );
INSERT INTO PAYMENT_METHOD VALUES( 'PD2',25000 ,'UPI' );
INSERT INTO PAYMENT_METHOD VALUES( 'PD3',120000 ,'EMI' );
INSERT INTO PAYMENT_METHOD VALUES( 'PD4',15000 ,'CHECK' );
INSERT INTO PAYMENT_METHOD VALUES( 'PD5',100 ,'DEMAND DRAFT' );


INSERT INTO ORDERS VALUES( 'ORD_1','2023-01-12','2023-02-12','GIFT WRAPPED','9874563210','PD1','I1','1JS038','A1' );
INSERT INTO ORDERS VALUES( 'ORD_2','2023-01-5','2023-02-5','WITH CHOCOLATE BOX','9563210874','PD2','I2','1JS024','A2' );
INSERT INTO ORDERS VALUES( 'ORD_3','2023-01-10','2023-02-10','WITH TEXT MESSAGE','9563287410','PD3','I3','1JS026','A3' );
INSERT INTO ORDERS VALUES( 'ORD_4','2023-01-23','2023-02-23','GIFT WRAPPED','9832107456','PD4','I4','1JS030','A4' );
INSERT INTO ORDERS VALUES( 'ORD_5','2023-01-9','2023-02-9','GIFT WRAPPED','9821074563','PD5','I5','1JS041','A5' );

#(1)
SELECT C.USER_NAME 
FROM CUSTOMER_ID C
WHERE C.USER_ID IN 
(
SELECT O.USER_ID
FROM CUSTOMER_ID C,PAYMENT_METHOD P,ORDERS O
WHERE O.PID=P.PID
AND C.USER_ID=O.USER_ID
AND O.PID IN
(
SELECT PID
FROM PAYMENT_METHOD
WHERE AMT=
(
SELECT MAX(AMT)
FROM PAYMENT_METHOD
)
)
);

#(2) TO CHECK ASSERTION
INSERT INTO PAYMENT_METHOD VALUES( 'PD6',10 ,'DEMAND DRAFT' );


#(3)
SELECT C.USER_NAME ,A.CITY,P.AMT
FROM CUSTOMER_ID C, ADDRESS A,PAYMENT_METHOD P,ORDERS O
WHERE O.USER_ID=C.USER_ID
AND P.PID=O.PID
AND C.AID=A.AID
AND A.CITY='PATNA';

#(4)
SELECT C.USER_NAME  ,P.AMT ,S.IN_DEMAND_RATING
FROM CUSTOMER_ID C,PAYMENT_METHOD P,ORDERS O,STOCK S
WHERE P.PID=O.PID
AND C.USER_ID=O.USER_ID
AND S.ITEM_ID=O.ITEM_ID
AND S.IN_DEMAND_RATING<4;

#(5)
SELECT C.USER_NAME 
FROM CUSTOMER_ID C, ORDERS O
WHERE O.USER_ID=C.USER_ID
AND O.ADD_INFO='GIFT WRAPPED';

/*
#(4)
#SELECT C.USER_NAME  ,P.AMT
#FROM CUSTOMER_ID C,PAYMENT_METHOD P,ORDERS O,STOCK S
#WHERE P.PID=O.PID
#AND C.USER_ID=O.USER_ID
#AND S.ITEM_ID=O.ITEM_ID
#AND S.IN_DEMAND_RATING IN
#(
#SELECT S.IN_DEMAND_RATING
#FROM STOCK S
#WHERE S.IN_DEMAND_RATING<4
#);

CREATE ASSERTION MINAMT
CHECK
(
NOT EXISTS(
SELECT P.AMT 
FROM PAYMENT_METHOD P
WHERE P.AMT<200
)
);
CREATE ASSERTION SUM_CONSTRAINT 
CHECK  ( NOT EXISTS ( 
SELECT P.AMT 
FROM PAYMENT_METHOD P
WHERE P.AMT<200 ));
*/
